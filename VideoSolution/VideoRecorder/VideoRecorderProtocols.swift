//
//  VideoRecorderProtocols.swift
//  VideoSolution
//
//  Created Galean Pallerman on 26.07.2019.
//  Copyright Â© 2019 GPco. All rights reserved.
//
//  Template generated by Galean Pallerman
//

import UIKit
import AVFoundation

protocol VideoRecorderInteractorProcotol: NSObject {
    var videoRecordURL: URL { get set }
    var audioEnabled: Bool { get set }
    
    var possibleAudioInputs: [AVCaptureDevice] { get }
    var possibleVideoInputs: [AVCaptureDevice] { get }
    
    func setup(with videoRecordURL: URL, audioDevice: AVCaptureDevice?, videoDevice: AVCaptureDevice, videoQuality: AVCaptureSession.Preset)
    func startRecording()
    func stopRecording()
}

protocol VideoRecorderInteractorToPresenterProtocol: NSObject {
    func display(videoPreview: CIImage)
    func displayVideoInputChange()
    func updateCameraRollPreview(with galleryData: GalleryPreviewData)
    
    func handleAudio(muted: Bool)
    func handleTorch(isSupported: Bool, mode: TorchMode?)
    
//    func displayFacesBoundingBoxes(with rects: [CGRect])
//    func clearFacesBoundingBoxes()
}

protocol VideoRecorderPresenterToViewProtocol: NSObject {
    func display(videoPreview: UIImage)

    func flipVideoPreview()
    func updateCameraRollPreview(with image: UIImage)
    
    func startTimer()
    func resetTimer()
    
    func changeAudioButton(muted: Bool)
    func makeTorchButton(hidden: Bool)
    func changeTorchButton(mode: TorchMode)
}

protocol VideoRecorderPresenterToInteractorProtocol: NSObject {
    func requestedHandleViewDidLoad()
    func requestedGallery()
    func requestedStartRecording()
    func requestedStopRecording()
    func requestedMute()
    func requestedTorch()
    func requestedSwitchCamera()
}

protocol VideoRecorderViewToPresenterProtocol: NSObject {
    func viewDidLoad()
    func galleryButtonClicked()
    func startRecordingButtonClicked()
    func stopRecordingButtonClicked()
    func muteButtonClicked()
    func torchButtonClicked()
    func switchCameraButtonClicked()
//    func pickedFilter(with identifier: String)
}

struct GalleryPreviewData {
    let image: UIImage
}

typealias TorchMode = AVCaptureDevice.TorchMode
